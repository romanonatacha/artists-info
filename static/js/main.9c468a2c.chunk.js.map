{"version":3,"sources":["components/Loader/Loader.js","components/Error/Error.js","components/Artist/Artist.js","components/Search/Search.js","components/Header/Header.js","components/Banner/Banner.js","components/AlbumList/AlbumList.js","components/Biography/Biography.js","components/Tracks/Tracks.js","components/Home/Home.js","components/Routes/Routes.js","components/Footer/Footer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Loader","className","Component","Error","this","props","error","Artist","artistData","artists","strCountry","strGenre","intFormedYear","to","strArtist","Search","getInfo","search","onHandleChange","onSubmit","type","id","name","placeholder","value","onChange","Header","Banner","image","alt","src","AlbumList","albumData","artistName","strArtistBanner","key","album","map","item","idAlbum","strAlbum","intYearReleased","Biography","strBiographyEN","Tracks","useParams","useState","track","tracks","setTracks","loading","setLoading","useEffect","a","fetch","process","then","response","json","data","console","log","getTracks","strAlbumThumb","idTrack","strTrack","Home","Routes","exact","path","children","href","target","rel","API_KEY","App","state","undefined","e","setState","preventDefault","history","push","elements","artist","withRouter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c468a2c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Loader.scss'\r\n\r\n\r\nexport default class Loader extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"loader\">\r\n                <div className=\"loader-inner\">\r\n                    <div className=\"loader-line-wrap\">\r\n                        <div className=\"loader-line\"></div>\r\n                    </div>\r\n                    <div className=\"loader-line-wrap\">\r\n                        <div className=\"loader-line\"></div>\r\n                    </div>\r\n                    <div className=\"loader-line-wrap\">\r\n                        <div className=\"loader-line\"></div>\r\n                    </div>\r\n                    <div className=\"loader-line-wrap\">\r\n                        <div className=\"loader-line\"></div>\r\n                    </div>\r\n                    <div className=\"loader-line-wrap\">\r\n                        <div className=\"loader-line\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Error.scss'\r\n\r\nexport default class Error extends Component {\r\n    render() {\r\n        const { error, className } = this.props\r\n\r\n        return (\r\n            <div className=\"error\">\r\n                <i className={className}></i>\r\n                <p className=\"error__text\">\r\n                    {error}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Artist.scss'\r\n\r\nimport Error from '../Error/Error'\r\n\r\nexport default class Artist extends Component {\r\n    render() {\r\n        const { artistData, error } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {artistData && !error &&\r\n                    <div className=\"artist\">\r\n                        <div className=\"artist__info\">\r\n                            <div className=\"artist__info__card\">\r\n                                <div className=\"artist__info__card__item country\">\r\n                                    <p>\r\n                                        from\r\n                                        <br />\r\n                                        <span>\r\n                                            {artistData.artists[0].strCountry}\r\n                                        </span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"artist__info__card\">\r\n                                <div className=\"artist__info__card__item genre\">\r\n                                    <p>\r\n                                        genre\r\n                                        <br />\r\n                                        <span>\r\n                                            {artistData.artists[0].strGenre}\r\n                                        </span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"artist__info__card\">\r\n                                <div className=\"artist__info__card__item year\">\r\n                                    <p>\r\n                                        since\r\n                                        <br />\r\n                                        <span>\r\n                                            {artistData.artists[0].intFormedYear}\r\n                                        </span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"artists__more\">\r\n                            <Link to={`/albums/${artistData.artists[0].strArtist}`}>\r\n                                <div className=\"artist__more__card\">\r\n                                    <div className=\"artist__more__card__item album\">\r\n                                        <p>\r\n                                            <span>\r\n                                                Albums\r\n                                            </span>\r\n                                            <br/><br/>\r\n                                            click to discover\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                            <Link to={`/biography/${artistData.artists[0].strArtist}`}>\r\n                                <div className=\"artist__more__card\">\r\n                                    <div className=\"artist__more__card__item bio\">\r\n                                        <p>\r\n                                            <span>\r\n                                                Biography\r\n                                            </span>\r\n                                            <br/><br/>\r\n                                            click to read\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {!artistData && !error &&\r\n                    <Error className=\"error__yellow-icon fa fa-exclamation-triangle\" error='Oops, something is wrong! Please try again or come back later.' />\r\n                }\r\n                {error &&\r\n                    <Error className=\"error__red-icon fa fa-exclamation-circle\" error='The artist was not found.' />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport './Search.scss'\r\n\r\nexport default class Search extends Component {\r\n\r\n    render() {\r\n\r\n        const {getInfo, search, onHandleChange} = this.props\r\n\r\n        return (\r\n            <div className=\"search\">\r\n                <div className=\"box\">\r\n                    <div className=\"container-2\">\r\n                    <form onSubmit={getInfo}>\r\n                        <button className=\"icon search__button\" type=\"submit\"><i className=\"fa fa-search\"></i></button>\r\n                        <input type=\"text\" id=\"search\" name=\"search\" placeholder=\"enter artist or band name\" value={search} onChange={onHandleChange} />\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component, Fragment} from 'react'\r\nimport './Header.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport Search from '../Search/Search'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n\r\n        const { getInfo, error, search, onHandleChange} = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"back-btn\">\r\n                    <Link to='/'><i className=\"fa fa-backward icon\"></i><br/>back to home</Link>\r\n                </div>\r\n                <div className=\"app__search\">\r\n                    <Search getInfo={getInfo} error={error} search={search} onHandleChange={onHandleChange} />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, {Component, Fragment}  from 'react'\r\nimport './Banner.scss'\r\n\r\nexport default class Banner extends Component {\r\n    render() {\r\n        const { image, alt, artistData, error } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {artistData && !error &&\r\n                    <div className=\"banner\">\r\n                        <img src={image} alt={alt} />\r\n                    </div>\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport './AlbumList.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../Header/Header'\r\nimport Banner from '../Banner/Banner'\r\n\r\nfunction AlbumList(props) {\r\n    let { albumData, artistData, getInfo, error, onHandleChange, search } = props\r\n    const artistName = artistData.artists[0].strArtist\r\n    \r\n    return (\r\n        <Fragment>\r\n            <Header getInfo={getInfo} error={error} search={search} onHandleChange={onHandleChange} />\r\n            <Banner  artistData={artistData} image={`${artistData.artists[0].strArtistBanner}/preview`} alt={artistData.artists[0].strArtist} />\r\n            <div className=\"albumlist\">\r\n                <div className=\"albumlist__content\">\r\n                    <ul className=\"albumlist__content__list\">\r\n                        <li key=\"title\" className=\"albumlist__content__list__item title\">\r\n                            <span>Album</span>\r\n                            <span>Year</span>  \r\n                        </li>\r\n                        {albumData.album.map(item =>\r\n                            <li key={item.idAlbum} className=\"albumlist__content__list__item\">\r\n                                <Link to={`/albums/${artistName}/${item.idAlbum}`} >\r\n                                    <span>{item.strAlbum}</span>\r\n                                    <span>{item.intYearReleased}</span>  \r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default AlbumList","import React, { Fragment } from 'react'\r\nimport './Biography.scss'\r\n\r\nimport Header from '../Header/Header'\r\nimport Banner from '../Banner/Banner'\r\n\r\nfunction Biography(props) {\r\n    let { artistData, getInfo, onHandleChange, error, search } = props\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header getInfo={getInfo} error={error} search={search} onHandleChange={onHandleChange} />\r\n            <Banner artistData={artistData} image={`${artistData.artists[0].strArtistBanner}/preview`} alt={artistData.artists[0].strArtist} />\r\n            <div className=\"bio\">\r\n                <div className=\"bio__title\">About {artistData.artists[0].strArtist}</div>\r\n                <div className=\"bio__text\">{artistData.artists[0].strBiographyEN}</div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Biography","import React, { useEffect, useState, Fragment } from 'react'\r\nimport './Tracks.scss'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport Loader from '../Loader/Loader'\r\nimport Header from '../Header/Header'\r\nimport Banner from '../Banner/Banner'\r\n\r\nfunction Tracks(props) {\r\n    let { artistData, albumData, getInfo, onHandleChange, error, search } = props\r\n    let { idAlbum } = useParams()\r\n    const [ tracks, setTracks ] = useState({ track: [] })\r\n    const [ loading, setLoading ] = useState(true)\r\n\r\n    const API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n    // fetching tracks data using the album id\r\n    useEffect(() => {\r\n        const getTracks = async () => {\r\n            \r\n            await fetch(`https://theaudiodb.com/api/v1/json/${API_KEY}/track.php?m=${idAlbum}`)   \r\n            .then(response => response.json())\r\n                .then(data => {\r\n                setTracks(data)\r\n                setLoading(false)\r\n                console.log(data)             \r\n            })\r\n        }\r\n\r\n        getTracks()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header getInfo={getInfo} error={error} search={search} onHandleChange={onHandleChange} />\r\n            <Banner  artistData={artistData} image={`${artistData.artists[0].strArtistBanner}/preview`} alt={artistData.artists[0].strArtist} />\r\n            {loading &&\r\n                <Loader />\r\n            }\r\n            {!loading &&\r\n                <div className=\"tracks\">\r\n                    <div className=\"tracks__content\">\r\n                        <div className=\"tracks__content__image\">\r\n                            {/* map trought albumData, and checks if the album id is the same os the album id of url param, and render the album image of this album */}\r\n                            {albumData.album.map(item => {\r\n                                if (item.idAlbum === idAlbum) {\r\n                                    return (\r\n                                        <Fragment>\r\n                                            <h3 className=\"tracks__content__image__title\">{item.strAlbum}</h3>\r\n                                            <img key={item.idAlbum} src={`${item.strAlbumThumb}/preview`} alt={item.strAlbum} />\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </div>\r\n                        <ul className=\"tracks__content__list\">\r\n                            <h3 className=\"tracks__content__list__title\">Tracks</h3>\r\n                            {/* map trought tracks api, and render a list of tracks */}\r\n                            {tracks.track.map(item =>\r\n                                <li key={item.idTrack} className=\"tracks__content__list__item\">\r\n                                    {item.strTrack}\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Tracks","import React, {Component} from 'react'\r\nimport './Home.scss'\r\nimport Search from '../Search/Search'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        \r\n        const { getInfo, error, search, onHandleChange } = this.props\r\n\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"home__banner\">\r\n                    <div className=\"home__banner__search-box\">\r\n                        <h1 className=\"home__banner__search-box__title\">\r\n                            discover about<br/>\r\n                            your favorite band<br/>\r\n                            or music artist\r\n                        </h1>\r\n                        <Search getInfo={getInfo} error={error} search={search} onHandleChange={onHandleChange} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Fragment} from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport Artist from '../Artist/Artist'\r\nimport AlbumList from '../AlbumList/AlbumList'\r\nimport Biography from '../Biography/Biography'\r\nimport Tracks from '../Tracks/Tracks'\r\nimport Home from '../Home/Home'\r\nimport Banner from '../Banner/Banner'\r\nimport Header from '../Header/Header'\r\n\r\nfunction Routes(props) {\r\n\r\n    const { artistData, albumData, loading, error, getInfo, onHandleChange, search } = props\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path ='/'>\r\n                {!loading &&\r\n                    <Home\r\n                        getInfo={getInfo}\r\n                        error={error}\r\n                        search={search}\r\n                        onHandleChange={onHandleChange}\r\n                    />\r\n                }\r\n            </Route>\r\n            <Route exact path=\"/query\">\r\n                {!loading &&\r\n                    <Fragment>\r\n                        <Header getInfo={getInfo} error={error} search={search} onHandleChange={onHandleChange} />\r\n                        {artistData &&\r\n                            <Banner artistData={artistData} image={`${artistData.artists[0].strArtistBanner}/preview`} alt={artistData.artists[0].strArtist} />\r\n                        }\r\n                        \r\n                        <Artist artistData={artistData} error={error}/>\r\n                    </Fragment>\r\n                }\r\n            </Route>\r\n            <Route\r\n                exact path={`/albums/:id`}\r\n                children={<AlbumList artistData={artistData}\r\n                albumData={albumData} />}\r\n            />\r\n            <Route\r\n                exact path={`/biography/:id`}\r\n                children={<Biography artistData={artistData}\r\n                albumData={albumData} />}\r\n            />\r\n            <Route exact path={`/albums/:id/:idAlbum`}>\r\n                <Tracks \r\n                    artistData={artistData}\r\n                    albumData={albumData}\r\n                />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n\r\n}\r\n\r\nexport default Routes","import React, {Component} from 'react'\r\nimport './Footer.scss'\r\n\r\nexport default class Loader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <p>\r\n                    <a href=\"https://www.linkedin.com/in/natacha-romano/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        Developed by Natacha Romano ©\r\n                    </a>\r\n                </p>  \r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\nimport { withRouter } from 'react-router-dom'\nimport './App.scss'\nimport Loader from '../Loader/Loader'\nimport Routes from '../Routes/Routes'\nimport Footer from '../Footer/Footer'\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n  \nclass App extends Component {\n\n  state = {\n    error: false,\n    loading: false,\n    artistData: undefined,\n    albumData: undefined,\n    search: ''\n  }\n\n  // handle the input value\n  onHandleChange = (e) => {\n    this.setState({\n      search: e.target.value\n    })\n  }\n  \n  // function called when search form is submited\n  getInfo = async (e) => {\n    e.preventDefault()\n\n    // redirect to home when submit form\n    this.props.history.push('/query')\n    \n    this.setState({\n      loading: true,\n      error: false,\n      artistData: undefined,\n      albumData: undefined,\n      search: e.target.elements.search.value\n    })\n\n    // fetching api's data\n    const artist = await fetch(`https://theaudiodb.com/api/v1/json/${API_KEY}/search.php?s=${this.state.search}`)\n    const album = await fetch(`https://theaudiodb.com/api/v1/json/${API_KEY}/searchalbum.php?s=${this.state.search}`)\n    \n    // parsing into json format\n    const artistData = await artist.json()\n    const albumData = await album.json()\n\n    console.log(artistData)\n    console.log(albumData)\n    \n    // handling the errors, if the api returns null when the artist was not found\n    if (artistData.artists === null || albumData.album === null) {\n      this.setState({\n        artistData: undefined,\n        albumData: undefined,\n        error: true,\n        loading: false,\n        search: ''\n      })\n    } else {\n      this.setState({\n        artistData: artistData,\n        albumData: albumData,\n        error: false,\n        loading: false,\n        search: ''\n      })\n    }\n  }\n\n  render() {\n\n    const {loading, artistData, albumData, error, search } = this.state\n\n    return (\n      <div className=\"app\">\n\n        {loading &&\n          <Loader />\n        }\n\n        <Routes\n          getInfo={this.getInfo}\n          onHandleChange={this.onHandleChange}\n          artistData={artistData}\n          albumData={albumData}\n          loading={loading}\n          error={error}\n          search={search}\n        />\n      <Footer />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n\t<HashRouter><App /></HashRouter>, \n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}